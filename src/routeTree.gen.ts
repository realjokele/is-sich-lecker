/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as IndexRouteRouteImport } from './routes/index.route'
import { Route as AuthSignupRouteRouteImport } from './routes/_auth/signup.route'
import { Route as AuthResetPasswordRouteRouteImport } from './routes/_auth/reset-password.route'
import { Route as AuthPasswordChangedRouteRouteImport } from './routes/_auth/password-changed.route'
import { Route as AuthLoginRouteRouteImport } from './routes/_auth/login.route'
import { Route as AuthForgotPasswordRouteRouteImport } from './routes/_auth/forgot-password.route'
import { Route as AppDashboardRouteRouteImport } from './routes/_app/dashboard.route'
import { Route as AppCreateRecipeRecipeIdRouteRouteImport } from './routes/_app/create-recipe.$recipeId.route'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRouteRoute = IndexRouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRouteRoute = AuthSignupRouteRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthResetPasswordRouteRoute = AuthResetPasswordRouteRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthPasswordChangedRouteRoute =
  AuthPasswordChangedRouteRouteImport.update({
    id: '/password-changed',
    path: '/password-changed',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthLoginRouteRoute = AuthLoginRouteRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRouteRoute = AuthForgotPasswordRouteRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AppDashboardRouteRoute = AppDashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)
const AppCreateRecipeRecipeIdRouteRoute =
  AppCreateRecipeRecipeIdRouteRouteImport.update({
    id: '/create-recipe/$recipeId',
    path: '/create-recipe/$recipeId',
    getParentRoute: () => AppRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/dashboard': typeof AppDashboardRouteRoute
  '/forgot-password': typeof AuthForgotPasswordRouteRoute
  '/login': typeof AuthLoginRouteRoute
  '/password-changed': typeof AuthPasswordChangedRouteRoute
  '/reset-password': typeof AuthResetPasswordRouteRoute
  '/signup': typeof AuthSignupRouteRoute
  '/create-recipe/$recipeId': typeof AppCreateRecipeRecipeIdRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/dashboard': typeof AppDashboardRouteRoute
  '/forgot-password': typeof AuthForgotPasswordRouteRoute
  '/login': typeof AuthLoginRouteRoute
  '/password-changed': typeof AuthPasswordChangedRouteRoute
  '/reset-password': typeof AuthResetPasswordRouteRoute
  '/signup': typeof AuthSignupRouteRoute
  '/create-recipe/$recipeId': typeof AppCreateRecipeRecipeIdRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRouteRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRouteRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRouteRoute
  '/_auth/login': typeof AuthLoginRouteRoute
  '/_auth/password-changed': typeof AuthPasswordChangedRouteRoute
  '/_auth/reset-password': typeof AuthResetPasswordRouteRoute
  '/_auth/signup': typeof AuthSignupRouteRoute
  '/_app/create-recipe/$recipeId': typeof AppCreateRecipeRecipeIdRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/password-changed'
    | '/reset-password'
    | '/signup'
    | '/create-recipe/$recipeId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/password-changed'
    | '/reset-password'
    | '/signup'
    | '/create-recipe/$recipeId'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/dashboard'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/password-changed'
    | '/_auth/reset-password'
    | '/_auth/signup'
    | '/_app/create-recipe/$recipeId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/password-changed': {
      id: '/_auth/password-changed'
      path: '/password-changed'
      fullPath: '/password-changed'
      preLoaderRoute: typeof AuthPasswordChangedRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/create-recipe/$recipeId': {
      id: '/_app/create-recipe/$recipeId'
      path: '/create-recipe/$recipeId'
      fullPath: '/create-recipe/$recipeId'
      preLoaderRoute: typeof AppCreateRecipeRecipeIdRouteRouteImport
      parentRoute: typeof AppRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AppRouteChildren {
  AppDashboardRouteRoute: typeof AppDashboardRouteRoute
  AppCreateRecipeRecipeIdRouteRoute: typeof AppCreateRecipeRecipeIdRouteRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRouteRoute: AppDashboardRouteRoute,
  AppCreateRecipeRecipeIdRouteRoute: AppCreateRecipeRecipeIdRouteRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRouteRoute: typeof AuthForgotPasswordRouteRoute
  AuthLoginRouteRoute: typeof AuthLoginRouteRoute
  AuthPasswordChangedRouteRoute: typeof AuthPasswordChangedRouteRoute
  AuthResetPasswordRouteRoute: typeof AuthResetPasswordRouteRoute
  AuthSignupRouteRoute: typeof AuthSignupRouteRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRouteRoute: AuthForgotPasswordRouteRoute,
  AuthLoginRouteRoute: AuthLoginRouteRoute,
  AuthPasswordChangedRouteRoute: AuthPasswordChangedRouteRoute,
  AuthResetPasswordRouteRoute: AuthResetPasswordRouteRoute,
  AuthSignupRouteRoute: AuthSignupRouteRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
